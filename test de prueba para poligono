test "Triangulo Equilatero correcto"
{
	poligono.a(15)
	poligono.b(15)
	poligono.c(15)
	assert.that(poligono.esEquilatero())
}
test "Triangulo Equilatero lado A diferente"
{
	poligono.a(20)
	poligono.b(15)
	poligono.c(15)
	assert.notThat(poligono.esEquilatero())
}
test "Triangulo Equilatero lado B diferente"
{
	poligono.a(15)
	poligono.b(10)
	poligono.c(15)
	assert.notThat(poligono.esEquilatero())
}
test "Triangulo Equilatero lado C diferente"
{
	poligono.a(15)
	poligono.b(15)
	poligono.c(16)
	assert.notThat(poligono.esEquilatero())
}


test "Triangulo Isosceles lado A diferente al resto"
{
	poligono.a(20)
	poligono.b(10)
	poligono.c(10)
	assert.that(poligono.esIsosceles())
}
test "Triangulo Isosceles lado B diferente al resto"
{
	poligono.a(20)
	poligono.b(30)
	poligono.c(20)
	assert.that(poligono.esIsosceles())
}
test "Triangulo Isosceles lado C diferente al resto"
{
	poligono.a(20)
	poligono.b(20)
	poligono.c(15)
	assert.that(poligono.esIsosceles())
}
test "Triangulo Isosceles,lado A se excede al resto"
{
	poligono.a(21)
	poligono.b(11)
	poligono.c(11)
	assert.notThat(poligono.esIsosceles())
}
test "Triangulo Isosceles,lado B se excede al resto"
{
	poligono.a(21)
	poligono.b(50)
	poligono.c(21)
	assert.notThat(poligono.esIsosceles())
}
test "Triangulo Isosceles,lado C se excede al resto"
{
	poligono.a(21)
	poligono.b(21)
	poligono.c(43)
	assert.notThat(poligono.esIsosceles())
}


test "Triangulo Escaleno correcto"
{
	poligono.a(15)
	poligono.b(7)
	poligono.c(8)
	assert.that(poligono.esEscaleno())
}
test"Triangulo Escaleno, lado A se excede al resto"
{
	poligono.a(6)
	poligono.b(7)
	poligono.c(8)
	assert.notThat(poligono.esEscaleno())
}
test"Triangulo Escaleno, lado B se excede al resto"
{
	poligono.a(16)
	poligono.b(30)
	poligono.c(8)
	assert.notThat(poligono.esEscaleno())
}
test"Triangulo Escaleno, lado C se excede al resto"
{
	poligono.a(16)
	poligono.b(30)
	poligono.c(50)
	assert.notThat(poligono.esEscaleno())
}
